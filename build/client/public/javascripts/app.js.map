{"version":3,"file":"/Users/joseph/Documents/Developement/cozycloud/dev-env/tasky/build/client/public/javascripts/app.js","sources":["app/AppDispatcher.coffee","app/actions/TagActionCreator.coffee","app/actions/TaskActionCreator.coffee","app/application.coffee","app/components/adjustable-input.coffee","app/components/application.coffee","app/components/breadcrumb-item.coffee","app/components/breadcrumb.coffee","app/components/menu-item.coffee","app/components/menu.coffee","app/components/task-list.coffee","app/components/task.coffee","app/constants/AppConstants.coffee","app/initialize.coffee","app/libs/flux/dispatcher/Dispatcher.coffee","app/libs/flux/invariant.js","app/libs/flux/store/Store.coffee","app/locales/en.coffee","app/locales/fr.coffee","app/mixins/store_watch_mixin.coffee","app/router.coffee","app/stores/TagStore.coffee","app/stores/TaskStore.coffee","app/utils/TaskUtil.coffee","app/utils/XHRUtils.coffee"],"names":[],"mappings":"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","sourcesContent":["Dispatcher = require './libs/flux/dispatcher/Dispatcher'\n{PayloadSources} = require './constants/AppConstants'\n\n###\n    Custom dispatcher class to add semantic method.\n###\nclass AppDispatcher extends Dispatcher\n\n    handleViewAction: (action) ->\n        payload =\n            source: PayloadSources.VIEW_ACTION\n            action: action\n\n        @dispatch payload\n\n    handleServerAction: (action) ->\n        payload =\n            source: PayloadSources.SERVER_ACTION\n            action: action\n\n        @dispatch payload\n\n\nmodule.exports = new AppDispatcher()","AppDispatcher = require '../AppDispatcher'\n{ActionTypes} = require '../constants/AppConstants'\n\nmodule.exports =\n\n    selectTags: (tags) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SELECT_TAGS\n            value: tags\n\n    selectSortCriterion: (criterion) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SELECT_SORT_CRITERION\n            value: criterion\n\n        localStorage.setItem 'sort-criterion', criterion\n","AppDispatcher = require '../AppDispatcher'\n{ActionTypes, Options} = require '../constants/AppConstants'\nTaskStore = require '../stores/TaskStore'\nTagStore = require '../stores/TagStore'\nXHRUtils = require '../utils/XHRUtils'\nTaskUtil = require '../utils/TaskUtil'\n\nmodule.exports = SELF =\n\n    createTask: (content, previousTask) ->\n\n        tasks = TaskStore.getAll()\n\n        if previousTask?\n            nextIndex = tasks.indexOf(previousTask) + 1\n        else\n            nextIndex = 0\n\n        nextTask = tasks[nextIndex]\n        {order, step} = TaskUtil.getNewOrder previousTask, nextTask\n\n        rawTask =\n            cid: TaskStore.getNextCid()\n            description: content\n            order: order\n            tags: TaskUtil.extractTags content\n\n        AppDispatcher.handleViewAction\n            type: ActionTypes.CREATE_TASK\n            value: {nextIndex, rawTask}\n\n        XHRUtils.create rawTask, (error, task) ->\n            # TODO: handle error\n\n            # updates with task id\n            changes =\n                id: task.id\n                creationDate: task.creationDate\n                completionDate: task.completionDate\n            cid = rawTask.cid\n\n            AppDispatcher.handleViewAction\n                type: ActionTypes.UPDATE_TASK\n                value: {cid, changes}\n\n            # Reindexes if step is too small\n            SELF.reindexTasks() if step <= Options.MIN_STEP\n\n    moveUp: (task) ->\n\n        selectedTags = TagStore.getSelected()\n        tasks = TaskStore.getAll()\n        subCollection = TaskStore.getByTags selectedTags\n\n        # we want to move up to the previous model in the base collection\n        # so we need to know where is it then make get the new order\n        previousIndexInSubCollection = subCollection.indexOf(task) - 1\n        previous = subCollection[previousIndexInSubCollection]\n        previousIndex = tasks.indexOf previous\n        previousOfPrevious = tasks[previousIndex - 1] or null\n\n        if previousIndex >= 0\n            {order, step} = TaskUtil.getNewOrder previousOfPrevious, previous\n            changedPiece = [task, previous]\n\n            changes = order: order\n            cid = task.cid\n            AppDispatcher.handleViewAction\n                type: ActionTypes.UPDATE_TASK\n                value: {cid, changes}\n\n            AppDispatcher.handleViewAction\n                type: ActionTypes.REORDER_TASK\n                value:\n                    task: task\n                    changedPiece: changedPiece\n                    index: previousIndex\n                    oldIndex: tasks.indexOf task\n\n            XHRUtils.update task.id, changes, (err, task) ->\n                #console.log err, task\n                # Reindexes if step is too small\n                SELF.reindexTasks() if step <= Options.MIN_STEP\n\n    moveDown: (task) ->\n\n        selectedTags = TagStore.getSelected()\n        tasks = TaskStore.getAll()\n        subCollection = TaskStore.getByTags selectedTags\n\n        # we want to move up to the next model in the base collection\n        # so we need to know where is it then make get the new order\n        nextIndexInSubCollection = subCollection.indexOf(task) + 1\n        next = subCollection[nextIndexInSubCollection]\n        nextIndex = tasks.indexOf next\n        nextOfNext = tasks[nextIndex + 1] or null\n\n        # if not last item of the collection\n        if nextIndex isnt tasks.length and \\\n           nextIndexInSubCollection isnt subCollection.length\n            {order, step} = TaskUtil.getNewOrder next, nextOfNext\n            changedPiece = [next, task]\n\n            changes = order: order\n            cid = task.cid\n            AppDispatcher.handleViewAction\n                type: ActionTypes.UPDATE_TASK\n                value: {cid, changes}\n\n            AppDispatcher.handleViewAction\n                type: ActionTypes.REORDER_TASK\n                value:\n                    task: task\n                    changedPiece: changedPiece\n                    index: nextIndex\n                    oldIndex: tasks.indexOf task\n\n            XHRUtils.update task.id, changes, (err, task) ->\n                #console.log err, task\n                # Reindexes if step is too small\n                SELF.reindexTasks() if step <= Options.MIN_STEP\n\n    editTask: (task, newContent) ->\n\n        changes =\n            description: newContent\n            tags: TaskUtil.extractTags newContent\n        cid = task.cid\n        AppDispatcher.handleViewAction\n            type: ActionTypes.UPDATE_TASK\n            value: {cid, changes}\n\n        XHRUtils.update task.id, changes, (err, task) ->\n            #console.log err, task\n\n    toggleState: (task, isDone) ->\n\n        if isDone\n            completionDate = Date.now()\n        else\n            completionDate = null\n\n        changes = done: isDone, completionDate: completionDate\n        cid = task.cid\n        AppDispatcher.handleViewAction\n            type: ActionTypes.UPDATE_TASK\n            value: {cid, changes}\n\n        XHRUtils.update task.id, changes, (err, task) ->\n            #console.log err, task\n\n    removeTask: (task) ->\n\n        AppDispatcher.handleViewAction\n            type: ActionTypes.REMOVE_TASK\n            value: task\n\n        XHRUtils.remove task.id, (err) ->\n           #console.log err\n\n    setArchivedMode: (isArchived) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SET_ARCHIVED_MODE\n            value: isArchived\n\n    setSearchQuery: (searchQuery) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SET_SEARCH_QUERY\n            value: searchQuery\n\n\n    archiveTasks: (tasks) ->\n        async.eachLimit tasks, 5, (task, callback) ->\n            AppDispatcher.handleViewAction\n                type: ActionTypes.ARCHIVE_TASK\n                value: task.cid\n\n            XHRUtils.update task.id, isArchived: true, (err) -> callback err\n        , (err) ->\n            # handle error case\n\n    restoreTask: (task) ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.RESTORE_TASK\n            value: task.cid\n\n        XHRUtils.update task.id, isArchived: false, done: false, (err, task) ->\n            # handle error case\n\n    reindexTasks: ->\n        AppDispatcher.handleViewAction\n            type: ActionTypes.SET_REINDEX_STATE\n            value: true\n        XHRUtils.reindex (err, tasks) ->\n\n            location.reload()\n\n            AppDispatcher.handleViewAction\n                type: ActionTypes.SET_REINDEX_STATE\n                value: false\n\n","module.exports =\n\n    initialize: ->\n        # Used in inter-app communication\n        #SocketListener = require '../lib/socket_listener'\n\n        @locale = window.locale\n        delete window.locale\n\n        @polyglot = new Polyglot locale: @locale\n        try\n            locales = require 'locales/'+ @locale\n        catch e\n            locales = require 'locales/en'\n\n        @polyglot.extend locales\n        window.t = @polyglot.t.bind @polyglot\n\n        TaskStore = require './stores/TaskStore'\n        TagStore = require './stores/TagStore'\n\n        # Routing management\n        @router = require 'router'\n        window.router = @router\n        Backbone.history.start()\n\n        # Makes this object immuable.\n        Object.freeze this if typeof Object.freeze is 'function'\n","{input, span} = React.DOM\n{KeyboardKeys} = require '../constants/AppConstants'\n\nmodule.exports = React.createClass\n    displayName: 'AdjustableInput'\n\n    render: ->\n\n        inputAttributes =\n            style: width: @state.width\n            ref: 'input'\n            type: 'text'\n            value: @state.content\n            onChange: @onChange\n            onBlur: @onBlur\n            onKeyUp: @onKeyUp\n            className: @props.className\n            placeholder: @props.placeholder\n\n        spanAttributes =\n            ref: 'size-calculator'\n            className: 'size-calculator'\n\n        span null,\n            input inputAttributes\n            span spanAttributes, @state.content\n\n    onChange: ->\n        node = @refs['input'].getDOMNode()\n        @setState content: node.value\n\n    onKeyUp: ->\n        key = event.keyCode or event.charCode\n\n        if key is KeyboardKeys.ENTER\n            @props.onSubmitHandler @state.content\n            @setState content: ''\n\n    onBlur: ->\n        node = @refs['input'].getDOMNode()\n        if node.value.length is 0\n            @setState width: 150\n\n    componentDidUpdate: ->\n        node = @refs['size-calculator'].getDOMNode()\n        width = node.getClientRects()[0].width\n\n        notInitialState = @state.content.length > 0 or @state.width > 150\n        if @state.width isnt width and notInitialState\n            @setState width: width\n\n    getInitialState: -> width: 150, content: ''\n","# UI components\n{div, p} = React.DOM\n\nMenu = require './menu'\nTaskList = require './task-list'\n\n# Stores\nTaskStore = require '../stores/TaskStore'\nTagStore = require '../stores/TagStore'\n\n# Mixins\nStoreWatchMixin = require '../mixins/store_watch_mixin'\n\nmodule.exports = React.createClass\n    displayName: 'Application'\n\n    mixins: [StoreWatchMixin([TagStore, TaskStore])]\n\n    getStateFromStores: ->\n        selectedTags = TagStore.getSelected()\n        tasks = TaskStore.getByTags selectedTags\n\n        tasks: tasks\n        selectedTags: selectedTags\n        tagTree: TagStore.getTree()\n        sortCriterion: TagStore.getSortCriterion()\n        isArchivedMode: TaskStore.isArchivedMode()\n        untaggedTasks: TaskStore.getUntagged()\n        numTasks: TaskStore.getNumTasks()\n        numArchivedTasks: TaskStore.getNumArchivedTasks()\n        searchQuery: TaskStore.getSearchQuery()\n        tasksDone: tasks.filter (task) -> task.done\n        isReindexing: TaskStore.isReindexing()\n\n    render: ->\n        div null,\n            div id: 'menu',\n                Menu\n                    selectedTags: @state.selectedTags\n                    tree: @state.tagTree\n                    sortCriterion: @state.sortCriterion\n                    isArchivedMode: @state.isArchivedMode\n                    untaggedTasks: @state.untaggedTasks\n                    numTasks: @state.numTasks\n                    numArchivedTasks: @state.numArchivedTasks\n            div className: 'container',\n                TaskList\n                    selectedTags: @state.selectedTags\n                    tasks: @state.tasks\n                    isArchivedMode: @state.isArchivedMode\n                    searchQuery: @state.searchQuery\n                    tasksDone: @state.tasksDone\n            if @state.isReindexing\n                div id: 'block'\n                div id: 'modal',\n                    p null, t 'reindexing message'\n\n","{div, span, a} = React.DOM\n\nstyler = React.addons.classSet\n\nmodule.exports = React.createClass\n    displayName: 'BreadcrumbItem'\n\n    render: ->\n\n        # can be tag or search query\n        isTag = @props.type is 'tag'\n\n        classes = styler\n            'breadcrumb-item': true\n            'excluded': @props.tag?.isExcluded\n            'notice-delete-action': @state.removeHovered\n\n        wrapperProperties =\n            className: classes\n            onClick: @props.toggleModeHandler\n            key: @props.key\n\n        if not isTag\n            value = \"\\\"#{@props.value}\\\"\"\n        else\n            value = @props.tag.value\n\n        removeProperties =\n            onMouseOver: @onMouseOver\n            onMouseOut: @onMouseOut\n            onClick: (event) =>\n                # prevents the toggle handler to be triggered\n                event.stopPropagation()\n                @props.removeHandler()\n\n        div wrapperProperties,\n            span null, value\n            a removeProperties, '×'\n\n    onMouseOver: -> @setState removeHovered: true\n    onMouseOut: -> @setState removeHovered: false\n\n    getInitialState: -> return removeHovered: false\n","{h1, span, input} = React.DOM\n\nBreadcrumbItem = require './breadcrumb-item'\nAdjustableInput = require './adjustable-input'\n\nmodule.exports = React.createClass\n    displayName: 'Breadcrumb'\n\n    render: ->\n        title = @getTitle()\n\n        h1 id: 'breadcrumb', title,\n            if @props.selectedTags?\n                @renderSelectedTags()\n\n            if @props.searchQuery?\n                @renderSearchInput()\n\n            if not @props.selectedTags? or (@props.selectedTags? and not @hasNoTagSelected())\n                AdjustableInput\n                    className: 'add-tag'\n                    placeholder: t 'search tag input'\n                    onSubmitHandler: @onSubmit\n\n    renderSelectedTags: ->\n        @props.selectedTags.map (tag, index) =>\n            BreadcrumbItem\n                key: index\n                type: 'tag'\n                tag: tag\n                removeHandler: @removeHandler.bind @, tag\n                toggleModeHandler: @toggleModeHandler.bind @, tag\n\n    renderSearchInput: ->\n        translationKey = 'match criterion'\n        if @hasNoTagSelected()\n            translationKey = \"#{translationKey} no tag\"\n        else\n            translationKey = \"#{translationKey} with tag\"\n\n        BreadcrumbItem\n            key: 'search-query'\n            type: 'search'\n            value: @props.searchQuery\n            removeHandler: @removeHandler\n\n    removeHandler: (tag) ->\n        newTagsList = @props.selectedTags?.slice 0\n        if tag? and newTagsList?\n            index = newTagsList.indexOf tag\n            newTagsList.splice index, 1\n        else\n            searchQuery = null\n\n        @buildUrl newTagsList, searchQuery\n\n    toggleModeHandler: (tag) ->\n        newTagsList = @props.selectedTags?.slice 0\n        if newTagsList?\n            index = @props.selectedTags.indexOf tag\n            newTagsList[index] = value: tag.value, isExcluded: not tag.isExcluded\n\n        @buildUrl newTagsList, @props.searchQuery\n\n    onSubmit: (newTagValue) ->\n\n        searchQuery = @props.searchQuery\n        newTagsList = @props.selectedTags?.slice 0\n\n        # tag or search query?\n        if newTagValue.indexOf('#') is 0\n            newTagValue = newTagValue.replace '#', ''\n            if newTagsList?\n                newTagsList.push value: newTagValue, isExcluded: false\n            else\n                newTagsList = [value: newTagValue, isExcluded: false]\n        else\n            searchQuery = newTagValue\n\n        @buildUrl newTagsList, searchQuery\n\n    buildUrl: (tagsList, searchQuery) ->\n        if tagsList?\n            formattedList = tagsList.map (tag) ->\n                if tag.isExcluded\n                    return \"!#{tag.value}\"\n                else\n                    return \"#{tag.value}\"\n\n            formattedList = formattedList.join '/'\n        else\n            formattedList = ''\n\n        query = \"\"\n        # if tags are selected\n        if tagsList?.length > 0\n            if @props.isArchivedMode\n                prefix = 'archivedByTags'\n            else\n                prefix = 'todoByTags/'\n\n            if searchQuery?\n                query = \"/;search/#{searchQuery}\"\n\n        # if there is just a search query\n        else if searchQuery?\n            prefix = 'search/'\n            query = searchQuery\n\n        # nothing selected\n        else\n            if @props.isArchivedMode\n                prefix = 'archived'\n            else\n                prefix = '#'\n\n\n        location = \"##{prefix}#{formattedList}#{query}\"\n        window.router.navigate location, true\n\n    hasNoTagSelected: ->\n        return not @props.selectedTags? or @props.selectedTags?.length is 0\n\n    getInitialState: ->\n        return inputContent: ''\n\n    getTitle: ->\n        unless @props.selectedTags?\n            if @props.isArchivedMode\n                title = t 'all archived tasks'\n            else\n                title = t 'all tasks'\n        else if @hasNoTagSelected()\n            title = t 'untagged tasks'\n        else\n            option = smart_count: @props.selectedTags.length\n            if @props.isArchivedMode\n                title = t 'archived tasks of', option\n            else\n                title = t 'tasks of', option\n\n        return title\n\n","{li, a, i, span, ul} = React.DOM\n\nstyler = React.addons.classSet\n\nmodule.exports = React.createClass\n    displayName: 'MenuItem'\n\n    render: ->\n        classNames = styler\n            'menu-tag': true\n            'active': @props.isActive\n            'selected': @props.isSelected\n            'magic': @props.magic\n\n        linkStyle = 'padding-left': (@props.depth + 1) * 20\n\n        li className: classNames,\n            a href: @props.url, title: @props.label, style: linkStyle,\n                i className: 'tag-icon'\n                span null, \"#{@props.label} (#{@props.count})\"\n            @props.getSubmenu @props.depth + 1\n\n\n","{div, i, ul, li, a, span} = React.DOM\n\nMenuItem = require './menu-item'\n{SortCriterions} = require '../constants/AppConstants'\nTagActionCreator = require '../actions/TagActionCreator'\n\nclasser = React.addons.classSet\n\nmodule.exports = React.createClass\n    displayName: 'Menu'\n\n    render: ->\n\n        archivedMenu =\n            id: 'archived'\n            link: '#archived'\n            label: t 'archived'\n            count: @props.numArchivedTasks\n\n        todoMenu =\n            id: 'tobedone'\n            link: '#'\n            label: t 'todo'\n            count: @props.numTasks\n\n        if @props.isArchivedMode\n            menu = [todoMenu, archivedMenu]\n        else\n            menu = [archivedMenu, todoMenu]\n\n        div id: 'menu',\n            i className: 'fa fa-arrow-left'\n            ul null,\n                li id: menu[0].id, className: 'first-level',\n                    a href: menu[0].link, \"#{menu[0].label} (#{menu[0].count})\"\n                li id: menu[1].id, className: 'first-level active',\n                    a href: menu[1].link, \"#{menu[1].label} (#{menu[1].count})\"\n                    @getSortMenu()\n                    @getSubmenu 0\n\n    getSortMenu: ->\n        classes = classer\n            'selected-sort': @props.sortCriterion is SortCriterions.COUNT\n        countProperties =\n            className: classes\n            title: 'brah'\n            onClick: @onSelectCriterion.bind @, SortCriterions.COUNT\n\n        classes = classer\n            'selected-sort': @props.sortCriterion is SortCriterions.ALPHA\n        alphaProperties =\n            className: classes\n            onClick: @onSelectCriterion.bind @, SortCriterions.ALPHA\n\n        ul className: 'sorts',\n            li alphaProperties,\n                a href: '#', title: t('sort numeric'), className: 'fa fa-sort-alpha-asc', ' '\n            li countProperties,\n                a href: '#', title: t('sort alpha'), className: 'fa fa-sort-numeric-desc', ' '\n\n    getSubmenu: (depth) ->\n        tags = @props.tree[depth]\n        ul className: 'submenu',\n            if depth is 0 and @props.untaggedTasks.length > 0\n                @getUntaggedMenuItem()\n\n            tags.map (tag) =>\n                @getMenuItem tag.value, tag.count, depth\n\n    getMenuItem: (label, count, depth) ->\n        selectedTagNames = @props.selectedTags?.map (tag) -> tag.value\n\n        # if the tag is the selected tags path, then it has a submenu\n        if selectedTagNames?[depth] is label\n            getSubmenuHandler = @getSubmenu\n        else\n            getSubmenuHandler = -> #\n\n        currentIndex = selectedTagNames?.indexOf label\n\n        # if tag is in the selected path\n        isActive = currentIndex is depth\n\n        # if tag is the leaf of the selected path\n        isLeaf = depth + 1 is selectedTagNames?.length\n\n        tagsInUrl = selectedTagNames?.slice(0, depth) or []\n\n        # adding if (not in the list or parent of last selected tags)\n        # and not the last selected tag\n        if ((not _.contains(tagsInUrl, label) \\\n        or selectedTagNames?.length > depth + 1)) \\\n        and  \\\n        (not (currentIndex + 1 is selectedTagNames?.length \\\n        and depth is currentIndex))\n            tagsInUrl.push label\n\n        if @props.isArchivedMode\n            if tagsInUrl.length > 0\n                prefix = 'archivedByTags'\n            else\n                prefix = 'archived'\n        else\n            if tagsInUrl.length > 0\n                prefix = 'todoByTags'\n            else\n                prefix = ''\n\n        url = \"##{prefix}\"\n        if tagsInUrl.length > 0\n            url = \"##{prefix}/#{tagsInUrl.join '/'}\"\n\n        return MenuItem\n            key: \"#{label}-#{depth}\"\n            label: label\n            count: count\n            depth: depth\n            isActive: isActive\n            isSelected: isActive and isLeaf\n            getSubmenu: getSubmenuHandler\n            url: url\n\n    onSelectCriterion: (criterion) ->\n        event.preventDefault()\n        TagActionCreator.selectSortCriterion criterion\n\n    getUntaggedMenuItem: ->\n        # if tag is in the selected path\n        isActive = @props.selectedTags?.length is 0\n\n        if @props.isArchivedMode\n            if isActive\n                url = '#archived'\n            else\n                url = '#archivedByTags/'\n        else\n            if isActive\n                url = '#'\n            else\n                url = '#todoByTags/'\n\n        return MenuItem\n            key: \"untagged\"\n            label: t 'untagged'\n            count: @props.untaggedTasks.length\n            depth: 0\n            isActive: isActive\n            isSelected: isActive\n            getSubmenu: ->\n            url: url\n            magic: true\n","{div, ul, li, i, h1, p, button} = React.DOM\n\nTaskActionCreator = require '../actions/TaskActionCreator'\nTaskUtils = require '../utils/TaskUtil'\n\nBreadcrumb = require './breadcrumb'\nTask = require './task'\n\nclasser = React.addons.classSet\n\nmodule.exports = React.createClass\n    displayName: 'TaskList'\n\n    render: ->\n        div null,\n            i className: 'fa fa-bars'\n            Breadcrumb\n                selectedTags: @props.selectedTags\n                searchQuery: @props.searchQuery\n                isArchivedMode: @props.isArchivedMode\n\n            unless @props.isArchivedMode\n                @getActionsBar()\n\n            unless @props.isArchivedMode\n                @getRenderTask\n                    id: 'new-task'\n                    key: \"new-task\"\n                    index: 0\n                    placeholder: @generatePlaceholder()\n                    defaultValue: @generateDefaultValue()\n                    isFocus: @state.focusIndex is 0\n\n            ul id: 'task-list',\n                @props.tasks.map (task, index) =>\n                    # index + 1 because the new task form counts as a task\n                    index = index + 1\n                    @getRenderTask\n                        key: \"task-c#{task.cid}\"\n                        index: index\n                        task: task\n                        defaultValue: @generateDefaultValue()\n                        isFocus: index is @state.focusIndex\n                        isArchivedMode: @props.isArchivedMode\n\n    # Helper to avoid adding all the handlers in every invokation\n    getRenderTask: (options) ->\n        currentTask = options.task or null\n        options.newTaskHandler = @newTaskHandler.bind @, currentTask\n        options.moveFocusUpHandler = @moveFocusUpHandler.bind @, currentTask\n        options.moveFocusDownHandler = @moveFocusDownHandler.bind @, currentTask\n        options.setFocusHandler = @setFocusHandler\n\n        if currentTask?\n            options.removeHandler = @removeTaskHandler.bind @, currentTask\n            options.saveHandler = @saveTaskHandler.bind @, currentTask\n            options.moveUpHandler = @moveTaskUpHandler.bind @, currentTask\n            options.moveDownHandler = @moveTaskDownHandler.bind @, currentTask\n            options.toggleStateHandler = @toggleStateHandler.bind @, currentTask\n            options.restoreTaskHandler = @restoreTaskHandler.bind @, currentTask\n        else\n            noop = ->\n            # Those handlers shouldn't do anything in the task form\n            options.removeHandler = noop\n            options.saveHandler = noop\n            options.moveUpHandler = noop\n            options.moveDownHandler = noop\n            options.toggleStateHandler = noop\n            options.restoreTaskHandler = noop\n\n        return Task options\n\n    getActionsBar: ->\n        styles = classer\n            button: 'true'\n            disable: @props.tasksDone.length is 0\n\n        buttonProperties =\n            id: 'archive-button'\n            className: styles\n            onClick: @archiveHandler\n\n        p id: 'actions', t('actions headline'),\n            button buttonProperties, t 'archive button'\n\n    newTaskHandler: (previousTask, content = '') ->\n        if content.length is 0\n            content = @generateDefaultValue()\n\n        TaskActionCreator.createTask content, previousTask\n\n    removeTaskHandler: (task) ->\n        # removing a task mechanically moves the focus down\n        # we move it up unless this is the first task of the list and that there\n        # is more than one task in the said list (don't go to the form unless\n        # it's the only thing we can do)\n        if @state.focusIndex isnt 1 or (@props.tasks.length - 1) is 0\n            @moveFocusUpHandler()\n\n        TaskActionCreator.removeTask task\n\n    saveTaskHandler: (task, newContent) ->\n        TaskActionCreator.editTask task, newContent\n\n    moveTaskUpHandler: (task) ->\n        TaskActionCreator.moveUp task\n\n        # only move the focus to another task, not the form\n        if @state.focusIndex isnt 1\n            @moveFocusUpHandler()\n\n    moveTaskDownHandler: (task) ->\n        TaskActionCreator.moveDown task\n        @moveFocusDownHandler()\n\n    toggleStateHandler: (task, isDone) ->\n        TaskActionCreator.toggleState task, isDone\n\n    # Moves the focus to the previous task\n    moveFocusUpHandler: ->\n        if @state.focusIndex > 0\n            newIndex = @state.focusIndex - 1\n        else\n            newIndex = 0\n\n        @setState focusIndex: newIndex\n\n    # Moves the focus to the next task\n    moveFocusDownHandler: ->\n        listLength = @props.tasks.length\n        if @state.focusIndex < listLength\n            newIndex = @state.focusIndex + 1\n        else\n            newIndex = listLength\n\n        @setState focusIndex: newIndex\n\n    # Sets the focus to the specified task\n    setFocusHandler: (index) ->\n        if index? and index >= 0\n            newIndex = index\n        else\n            newIndex = -1\n\n        @setState focusIndex: newIndex\n\n    archiveHandler: ->\n        TaskActionCreator.archiveTasks @props.tasksDone\n\n    restoreTaskHandler: (task) ->\n        TaskActionCreator.restoreTask task\n\n    getInitialState: ->\n        return focusIndex: 0\n\n    generatePlaceholder: ->\n        tagsList = TaskUtils.buildTagsList @props.selectedTags,\n            tagPrefix: '#'\n            regularSeparator: ', '\n            lastSeparator: \" #{t('and')} \"\n\n        if tagsList.length > 0\n            return t 'form headline tags', tagsList: tagsList\n        else\n            return t 'form headline'\n\n    generateDefaultValue: ->\n        tagsList = TaskUtils.buildTagsList @props.selectedTags, tagPrefix: '#'\n        tagsList =  \"#{tagsList} \" if tagsList isnt \"\"\n        return tagsList\n","{div, button, input, p} = React.DOM\n\n{KeyboardKeys, Options} = require '../constants/AppConstants'\n\nclasser = React.addons.classSet\n\nmodule.exports = React.createClass\n\n    displayName: 'Task'\n    interval: null\n\n    render: ->\n        buttonText = @getButtonText()\n        buttonProperties =\n            className: classer\n                'toggle-state': true\n                'button': true\n                # only relevant if the component is a creation form\n                'disabled': not @props.task and @state.inputValue.length is 0\n            title: buttonText\n            onMouseOver: @onMouseOver\n            onMouseOut: @onMouseOut\n            onClick: @onClick\n\n        inputProperties =\n            # For some reason tabIndex should start to 1\n            tabIndex: @props.index + 1\n            ref: 'task-content'\n            placeholder: @props.placeholder or ''\n            value: @state.inputValue\n            onChange: @onChange\n            onKeyUp: @onKeyUp\n            onKeyDown: @onKeyDown\n            onFocus: @onFocus\n            onBlur: @onBlur\n\n        wrapperClasses = classer\n            'task': true\n            'done': @props.task?.done\n            'new-task': @isNewTaskForm()\n            'is-creating': not @props.task?.id?\n\n        div className: wrapperClasses,\n            div className: 'task-container',\n                button buttonProperties, buttonText\n                div className: 'todo-field',\n                    div className: 'task-input-wrapper',\n                        input inputProperties\n\n            if @props.isArchivedMode\n                completionDate = Date.create @props.task.completionDate\n                formattedDate = completionDate.format t 'archived date format'\n                div className: 'todo-completionDate',\n                    p null, \"#{t 'completed headline'} #{formattedDate}\"\n\n    # Returns button text based on component state.\n    # The component can represent a task or be a creation form.\n    getButtonText: ->\n        # if there is a task, it can be toggled (todo/done)\n        if @props.task?\n            isDone = @props.task.done\n            isArchived = @props.task.isArchived\n            # Changes the button text depending on its state\n            if @state.buttonHover and isArchived\n                buttonText = t 'restore button?'\n            else if @state.buttonHover and isDone\n                buttonText = t 'done button?'\n            else if @state.buttonHover and not isDone\n                buttonText = t 'todo button?'\n            else if not @state.buttonHover and isDone\n                buttonText = t 'done button'\n            else if not @state.buttonHover and not isDone\n                buttonText = t 'todo button'\n\n        # otherwise it's just a creation form\n        else\n            buttonText = t 'new button'\n\n        return buttonText\n\n    componentDidMount: -> @componentDidUpdate()\n    componentDidUpdate: ->\n        if @props.isFocus\n            # Starts the periodical save if it's not a creation form\n            # and if it's not already started\n            if @props.task? and not @interval?\n                @startPeriodocalSave()\n\n            # Only selects the content when the task is focused (first render)\n            if @state.selectContent\n                node = @refs['task-content'].getDOMNode()\n                $(node).focus()\n\n                index = node.value.length\n                node.setSelectionRange 0, index\n                @setState selectContent: false\n\n    getInitialState: ->\n        return {\n            buttonHover: false\n            inputValue: @props.task?.description or ''\n            selectContent: true\n        }\n\n    # Toggles button's state\n    onMouseOver: -> @setState buttonHover: true\n    onMouseOut: -> @setState buttonHover: false\n\n    # Binds the input value to the component's state\n    onChange: ->\n        node = @refs['task-content'].getDOMNode()\n        @setState inputValue: node.value\n\n    # Moves the task (re-ordering) with ctrl+top/bottom arrow keys\n    # Removes the task if it's empty with 'backspace' key\n    # If it's a form, adds the selected tags at the beginning\n    onKeyDown: (event) ->\n        node = @refs['task-content'].getDOMNode()\n        key = event.keyCode or event.charCode\n        ctrlPressed = event.controlKey or event.metaKey\n        comboKeyPressed = event.metaKey or event.controlKey or event.altKey\n\n        # neutral keys shouldn't add the tags list\n        # backspace, space, tab, enter, top/bottom/left/right arrows\n        neutralKeys = [\n            KeyboardKeys.BACKSPACE\n            KeyboardKeys.SPACE\n            KeyboardKeys.TAB\n            KeyboardKeys.ENTER\n            KeyboardKeys.ARROW_TOP\n            KeyboardKeys.ARROW_DOWN\n            KeyboardKeys.ARROW_LEFT\n            KeyboardKeys.ARROW_RIGHT\n        ]\n\n        # sharp key on OSX, Ctrl+V is authorized\n        authorizedComboKeys = [KeyboardKeys.OSX_SHARP, KeyboardKeys.V]\n\n        if @isNewTaskForm() and node.value.length is 0 \\\n        and key not in neutralKeys \\\n        and (not comboKeyPressed or key in authorizedComboKeys)\n            @setState inputValue: @props.defaultValue\n        else if node.value.length is 0 and key is KeyboardKeys.BACKSPACE\n            event.preventDefault()\n            @props.removeHandler()\n        else if key is KeyboardKeys.ARROW_TOP and ctrlPressed\n            @props.moveUpHandler()\n        else if key is KeyboardKeys.ARROW_DOWN and ctrlPressed\n            @props.moveDownHandler()\n\n    # Changes focus with top/bottom keys\n    # Creates new task with 'enter' key\n    onKeyUp: (event) ->\n        key = event.keyCode or event.charCode\n\n        if key is KeyboardKeys.ENTER\n            @createNewTask() unless @props.isArchivedMode\n        else if key is KeyboardKeys.ARROW_TOP\n            @props.moveFocusUpHandler()\n        else if key is KeyboardKeys.ARROW_DOWN\n            @props.moveFocusDownHandler()\n\n    # Handles focus by mouse click\n    onFocus: ->\n        unless @props.isFocus\n            @props.setFocusHandler @props.index or 0\n\n        @startPeriodocalSave()\n\n    # Handles blur by mouse click\n    onBlur: ->\n        # removes the focus\n        @props.setFocusHandler null if @props.isFocus\n\n        # necessary so the content can be select on next focus\n        @setState selectContent: true\n\n        @stopPeriodicalSave()\n        @saveDescription()\n\n    onClick: ->\n        if @props.task?\n            if @props.task.isArchived\n                @props.restoreTaskHandler()\n            else\n                @props.toggleStateHandler not @props.task.done\n        else\n            @createNewTask()\n\n    createNewTask: ->\n        # if the task already exist, we want to create an empty one\n        content = if @props.task? then null else @state.inputValue\n        @props.newTaskHandler content\n\n        # resets the form field if it's a form\n        @setState inputValue: \"\" unless @props.task?\n\n        # moves the focus to the newly created task if it's not the form\n        if @props.task?\n            @props.setFocusHandler @props.index + 1\n\n\n    # Starts a timer that saves the task content every\n    # `Options.SAVE_INTERVAL_TIME` ms\n    startPeriodocalSave: ->\n        unless @interlval?\n            @interval = setInterval =>\n                @saveDescription()\n            , Options.SAVE_INTERVAL_TIME\n\n    saveDescription: ->\n        ref = @refs['task-content']\n        if ref?\n            node = ref.getDOMNode()\n            if node.value isnt @props.task?.description\n                @props.saveHandler node.value\n\n    stopPeriodicalSave: ->\n        clearInterval @interval\n        @interval = null\n\n    componentWillUnmount: ->\n        @stopPeriodicalSave()\n\n    isNewTaskForm: ->\n        return @props.placeholder?\n\n\n\n\n\n\n","module.exports =\n\n    ActionTypes:\n        'SELECT_TAGS'            : 'SELECT_TAGS'\n        'CREATE_TASK'            : 'CREATE_TASK'\n        'EDIT_TASK'              : 'EDIT_TASK'\n        'REMOVE_TASK'            : 'REMOVE_TASK'\n        'REORDER_TASK'           : 'REORDER_TASK'\n        'SELECT_SORT_CRITERION'  : 'SELECT_SORT_CRITERION'\n        'SET_ARCHIVED_MODE'      : 'SET_ARCHIVED_MODE'\n        'SET_SEARCH_QUERY'       : 'SET_SEARCH_QUERY'\n        'ARCHIVE_TASK'           : 'ARCHIVE_TASK'\n        'RESTORE_TASK'           : 'RESTORE_TASK'\n        'SET_REINDEX_STATE'      : 'SET_REINDEX_STATE'\n\n    KeyboardKeys:\n        'ENTER'         : 13\n        'BACKSPACE'     : 8\n        'TAB'           : 9\n        'SPACE'         : 32\n        'ARROW_LEFT'    : 37\n        'ARROW_TOP'     : 38\n        'ARROW_RIGHT'   : 39\n        'ARROW_DOWN'    : 40\n        'V'             : 86\n        'OSX_SHARP'     : 220\n\n    SortCriterions:\n        'COUNT': 'count'\n        'ALPHA': 'alpha'\n\n    PayloadSources:\n        'VIEW_ACTION'   : 'VIEW_ACTION'\n        'SERVER_ACTION' : 'SERVER_ACTION'\n\n    Options:\n        'SAVE_INTERVAL_TIME'    : 5000\n        'MIN_STEP'              : Math.pow 10, 4\n","app = require 'application'\n\n# The function called from index.html\n$ ->\n    $.fn.spin = (opts, color) ->\n        presets =\n            tiny:\n                lines: 8\n                length: 2\n                width: 2\n                radius: 3\n\n            small:\n                lines: 8\n                length: 1\n                width: 2\n                radius: 4\n\n            medium:\n                lines: 10\n                length: 4\n                width: 3\n                radius: 6\n\n            large:\n                lines: 10\n                length: 8\n                width: 4\n                radius: 8\n\n            extralarge:\n                lines: 8\n                length: 3\n                width: 10\n                radius: 20\n                top: 30\n                left: 50\n\n        if Spinner?\n            @each ->\n                $this = $(this)\n                spinner = $this.data(\"spinner\")\n                if spinner?\n                    spinner.stop()\n                    $this.data \"spinner\", null\n                else if opts isnt false\n                    if typeof opts is \"string\"\n                        if opts of presets\n                            opts = presets[opts]\n                        else\n                            opts = {}\n                        if color then opts.color = color\n\n                    spinner = new Spinner opts\n                    spinner.spin(this)\n                    $this.data \"spinner\", spinner\n\n    app.initialize()","###\n\n    -- Coffee port of Facebook's flux dispatcher. It was in ES6 and I haven't been\n    successful in adding a transpiler. --\n\n    Copyright (c) 2014, Facebook, Inc.\n    All rights reserved.\n\n    This source code is licensed under the BSD-style license found in the\n    LICENSE file in the root directory of this source tree. An additional grant\n    of patent rights can be found in the PATENTS file in the same directory.\n ###\n\ninvariant = require '../invariant'\n\n_lastID = 1\n_prefix = 'ID_'\n\nmodule.exports = Dispatcher = class Dispatcher\n    constructor: ->\n        this._callbacks = {};\n        this._isPending = {};\n        this._isHandled = {};\n        this._isDispatching = false;\n        this._pendingPayload = null;\n\n    ###\n        Registers a callback to be invoked with every dispatched payload. Returns\n        a token that can be used with `waitFor()`.\n\n        @param {function} callback\n        @return {string}\n    ###\n    register: (callback) ->\n        id = _prefix + _lastID++\n        this._callbacks[id] = callback\n        return id\n\n    ###\n        Removes a callback based on its token.\n\n        @param {string} id\n    ###\n    unregister: (id) ->\n        invariant(\n            this._callbacks[id],\n            'Dispatcher.unregister(...): `%s` does not map to a registered callback.',\n            id\n        )\n        delete this._callbacks[id]\n\n    ###\n        Waits for the callbacks specified to be invoked before continuing execution\n        of the current callback. This method should only be used by a callback in\n        response to a dispatched payload.\n\n        @param {array<string>} ids\n    ###\n    waitFor: (ids) ->\n        invariant(\n            this._isDispatching,\n            'Dispatcher.waitFor(...): Must be invoked while dispatching.'\n        )\n        for ii in [0..ids.length - 1] by 1\n            id = ids[ii]\n            if this._isPending[id]\n                invariant(\n                    this._isHandled[id],\n                    'Dispatcher.waitFor(...): Circular dependency detected while waiting for `%s`.',\n                    id\n                )\n                continue\n\n            invariant(\n                this._callbacks[id],\n                'Dispatcher.waitFor(...): `%s` does not map to a registered callback.',\n                id\n            )\n            this._invokeCallback id\n\n    ###\n        Dispatches a payload to all registered callbacks.\n\n        @param {object} payload\n    ###\n    dispatch: (payload) ->\n        invariant(\n            !this._isDispatching,\n            'Dispatch.dispatch(...): Cannot dispatch in the middle of a dispatch.'\n        );\n        this._startDispatching(payload);\n        try\n            for id of this._callbacks\n                if this._isPending[id]\n                    continue\n                this._invokeCallback id\n        finally\n          this._stopDispatching()\n\n    ###\n        Is this Dispatcher currently dispatching.\n\n        @return {boolean}\n    ###\n    isDispatching: -> return this._isDispatching\n\n    ###\n        Call the callback stored with the given id. Also do some internal\n        bookkeeping.\n\n        @param {string} id\n        @internal\n    ###\n    _invokeCallback: (id) ->\n        this._isPending[id] = true\n        this._callbacks[id](this._pendingPayload)\n        this._isHandled[id] = true\n\n    ###\n        Set up bookkeeping needed when dispatching.\n\n        @param {object} payload\n        @internal\n    ###\n    _startDispatching: (payload) ->\n        for id of this._callbacks\n          this._isPending[id] = false\n          this._isHandled[id] = false\n\n        this._pendingPayload = payload\n        this._isDispatching = true\n\n    ###\n        Clear bookkeeping used for dispatching.\n\n        @internal\n    ###\n    _stopDispatching: ->\n        this._pendingPayload = null\n        this._isDispatching = false\n","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n\"use strict\";\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (__DEV__) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        'Invariant Violation: ' +\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;","AppDispatcher = require '../../../AppDispatcher'\n\n\nmodule.exports = class Store extends EventEmitter\n\n    uniqID: null\n\n    # this variable will be shared with all subclasses so we store the items by subclass\n    # we don't use `@constructor.name` because it breaks when mangled\n    _nextUniqID = 0\n    _handlers = {}\n    _addHandlers = (type, callback) ->\n        _handlers[@uniqID] = {} unless _handlers[@uniqID]?\n        _handlers[@uniqID][type] = callback\n\n    # Registers the store's callbacks to the dispatcher\n    _processBinding = ->\n        @dispatchToken = AppDispatcher.register (payload) =>\n            {type, value} = payload.action\n            if (callback = _handlers[@uniqID]?[type])? then callback.call @, value\n\n\n    constructor: ->\n        super()\n        # set a uniq ID\n        @uniqID = _nextUniqID++\n        @__bindHandlers _addHandlers.bind @\n        _processBinding.call @\n\n    # Must be overriden by each store\n    __bindHandlers: (handle) ->\n        if __DEV__\n            throw new Error \"The store #{@constructor.name} must define a `__bindHandlers` method\"\n\n","module.exports =\n    \"todo\": \"To-do\"\n    \"archived\": \"Archived\"\n    \"untagged\": \"untagged\"\n    \"all tasks\": \"All tasks\"\n    \"all archived tasks\": \"All archived tasks\"\n    \"untagged tasks\": \"Untagged tasks\"\n    \"tasks of\": \"Tasks related to\"\n    \"archived tasks of\": \"Archived tasks related to\"\n    \"and\": \"and\"\n    \"archived date format\": \"{yyyy}/{MM}{dd} at {HH}:{mm}\"\n    \"actions headline\": \"Actions\"\n    \"completed headline\": \"Completed on\"\n    \"restore button\": \"Restore\"\n    \"restore button?\": \"Restore?\"\n    \"done button\": \"Done\"\n    \"done button?\": \"Done?\"\n    \"todo button\": \"Todo\"\n    \"todo button?\": \"Todo?\"\n    \"new button\": \"New\"\n    \"archive button\": \"Archive all done tasks\"\n    \"form headline tags\": \"What's next about %{tagsList}?\"\n    \"form headline\": \"What's next?\"\n    \"reindexing message\": \"Server is reindexing all the tasks, please wait a little...\"\n    \"search tag input\": \"search...\"\n    \"match criterion no tag\": \"of criterion\"\n    \"match criterion with tag\": \"and of criterion\"\n    \"sort alpha\": \"Sort by tag name\"\n    \"sort numeric\": \"Sort by number of tasks\"\n","module.exports =\n    \"todo\": \"A faire\"\n    \"archived\": \"Archivées\"\n    \"untagged\": \"sans étiquette\"\n    \"all tasks\": \"Toutes les tâches\"\n    \"all archived tasks\": \"Toutes les tâches archivées\"\n    \"untagged tasks\": \"Tâches sans étiquettes\"\n    \"tasks of\": \"Tâches de\"\n    \"archived tasks of\": \"Tâches archivées de\"\n    \"and\": \"et\"\n    \"archived date format\": \"{dd}/{MM}/{yyyy} à {HH}h{mm}\"\n    \"actions headline\": \"Actions\"\n    \"completed headline\": \"Complétée le\"\n    \"restore button\": \"Restaurer\"\n    \"restore button?\": \"Restaurer ?\"\n    \"done button\": \"Fait\"\n    \"done button?\": \"Fait ?\"\n    \"todo button\": \"A faire\"\n    \"todo button?\": \"A faire ?\"\n    \"new button\": \"Ajouter\"\n    \"archive button\": \"Archiver toutes les tâches faites\"\n    \"form headline tags\": \"Que devez-vous faire à propos de %{tagsList} ?\"\n    \"form headline\": \"Que devez-vous faire ?\"\n    \"reindexing message\": \"Le serveur est en train de ré-indexer les tâches, merci de patienter...\"\n    \"search tag input\": \"recherche...\"\n    \"match criterion no tag\": \"correspondant au critère\"\n    \"match criterion with tag\": \"et au critère\"\n    \"sort alpha\": \"Tri par étiquette\"\n    \"sort numeric\": \"Tri par nombre de tâches\"\n","module.exports = StoreWatchMixin = (stores) ->\n\n    return {\n        componentDidMount: ->\n            stores.forEach (store) => store.on 'change', @_setStateFromStores\n\n        componentWillUnmount: ->\n            stores.forEach (store) =>\n                store.removeListener 'change', @_setStateFromStores\n\n        getInitialState: -> return @getStateFromStores()\n\n        _setStateFromStores: -> @setState @getStateFromStores()\n    }","window.__DEV__ = true\n\nTaskActionCreator = require './actions/TaskActionCreator'\nTagActionCreator = require './actions/TagActionCreator'\nTaskActionCreator = require './actions/TaskActionCreator'\nApp = require './components/application'\n\nclass Router extends Backbone.Router\n\n    routes:\n        '': 'main'\n        'archived': 'archived'\n\n        'search/:query': 'mainSearch'\n        'todoByTags/*tags/;search/:query': 'todoByTagsWithSearch'\n        'todoByTags/;search/:query': 'todoByTagsWithSearch'\n        'todoByTags/*tags': 'todoByTags'\n\n        'archivedByTags/*tags': 'archivedByTags'\n\n\n    main: (followUp = false) ->\n        TaskActionCreator.setArchivedMode false\n        TagActionCreator.selectTags null\n        React.renderComponent App(), $('body')[0]\n\n    mainSearch: (query) ->\n        TaskActionCreator.setSearchQuery query\n\n    archived: ->\n        TaskActionCreator.setArchivedMode true\n        TagActionCreator.selectTags null\n        React.renderComponent App(), $('body')[0]\n\n    byTags: (viewType, listView, tags, searchQuery, isArchived) ->\n        if tags?\n            tags = tags.split '/'\n\n            # if the last char is '/', there is an empty element\n            tags.splice tags.length - 1 if tags[tags.length - 1].length is 0\n        else\n            tags = []\n\n        TaskActionCreator.setArchivedMode isArchived\n        TagActionCreator.selectTags tags\n        TaskActionCreator.setSearchQuery searchQuery\n\n        React.renderComponent App(), $('body')[0]\n\n    todoByTags: (tags) -> @byTags '#tobedone', @taskList, tags, null, false\n\n    todoByTagsWithSearch: (tags, query) ->\n        if not query?\n            query = tags\n            tags = null\n        @byTags '#tobedone', @taskList, tags, query\n\n    archivedByTags: (tags) ->\n        @byTags '#archived', @archivedTaskList, tags, null, true\n\n\nmodule.exports = new Router()\n","Store = require '../libs/flux/store/Store'\n\nTaskStore = require './TaskStore'\n\n{ActionTypes, SortCriterions} = require '../constants/AppConstants'\n\nclass TagStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n    _selectedTags = null\n\n    fromLocalStorage = localStorage.getItem 'sort-criterion'\n    _sortCriterion = fromLocalStorage or SortCriterions.COUNT\n\n    __bindHandlers: (handle) ->\n\n        handle ActionTypes.SELECT_TAGS, (tags) ->\n            _selectedTags = tags?.map (tag) ->\n                isExcluded = tag.indexOf('!') isnt -1\n                value = tag.replace '!', ''\n                return {value, isExcluded}\n\n            @emit 'change'\n\n        handle ActionTypes.SELECT_SORT_CRITERION, (criterion) ->\n            _sortCriterion = criterion\n            @emit 'change'\n\n    getSelected: -> return _selectedTags\n\n    getSelectedNames: -> _selectedTags?.map (tag) -> tag.value\n\n    getSortCriterion: -> return _sortCriterion\n\n    getTree: ->\n        selectedTagNames = @getSelectedNames()\n        maxDepth = selectedTagNames?.length or 0\n\n        tree = []\n\n        # Initializes an empty array for all depth\n        tree.push {} for depth in [0..maxDepth] by 1\n\n        # count number of tasks for each tag at the relevant depth\n        buildTree = (depth, list, excludeList = []) ->\n\n            # only count a task once for a tag\n            uniqList = _.uniq list\n\n            uniqList.forEach (tag) ->\n                if tag not in excludeList\n                    # initialize if it doesn't exist yet\n                    tree[depth][tag] ?= 0\n                    tree[depth][tag]++\n\n        # Processes each tasks to build the tag tree (based on selected tags)\n        TaskStore.getAll()\n            .map (task) -> task.tags\n            .forEach (tagsOfTask) ->\n                # all tags are represented at depth 0\n                buildTree 0, tagsOfTask\n\n                # build the tree with task's tags if relevant\n                for depth in [1..maxDepth] by 1\n\n                    # we don't count this task for tags already processed\n                    # at previous depth\n                    processedSelection = selectedTagNames?.slice 0, depth\n\n                    intersection = _.intersection processedSelection, tagsOfTask\n                    if intersection.length is processedSelection.length\n                        buildTree depth, tagsOfTask, processedSelection\n\n        # tree is now complete\n        aTree = []\n        if _sortCriterion is 'count'\n            # sort by -count, then +value\n            [firstCriterion, secondCriterion, factor] = ['count', 'value', 1]\n        else if _sortCriterion is 'alpha'\n            # sort by +value, then -count\n            [firstCriterion, secondCriterion, factor] = ['value', 'count', -1]\n\n\n        for branch in tree\n            depths = []\n            depths.push value: tag, count: count for tag, count of branch\n            depths.sort (a, b) ->\n                aFirst = a[firstCriterion]\n                bFirst = b[firstCriterion]\n                if aFirst > bFirst\n                    return -1 * factor\n                else if aFirst < bFirst\n                    return 1 * factor\n                else\n                    aSecond = a[secondCriterion]\n                    bSecond = b[secondCriterion]\n                    if aSecond > bSecond\n                        return -1 * factor\n                    else if aSecond < bSecond\n                        return 1 * factor\n                    else\n                        return 0\n\n            aTree.push depths\n\n        return aTree\n\nmodule.exports = new TagStore()\n","Store = require '../libs/flux/store/Store'\nTaskUtils = require '../utils/TaskUtil'\n\n{ActionTypes} = require '../constants/AppConstants'\n\nclass TaskStore extends Store\n\n    ###\n        Initialization.\n        Defines private variables here.\n    ###\n\n    # cid are internal client IDs to identify a model even if\n    # it has not an ID in the database yet. Not persisted.\n    _cid = 0\n\n    # Creates an OrderedMap of tasks\n    _tasks = Immutable.Sequence window.tasks\n\n        # sets task ID as index\n        .mapKeys (_, task) -> return task.id\n\n        # makes task object an immutable Map\n        .map (task) -> Immutable.fromJS task\n\n        .toOrderedMap()\n\n    _archivedMode = false\n    _archivedTasks = window.archivedTasks\n    _tasks = window.tasks\n    _searchQuery = null\n    _isReindexing = false\n\n    # TODO: retrieve the tasks sorted server-side\n    _archivedTasks.sort (a, b) ->\n        if a.completionDate > b.completionDate\n            return 1\n        else if a.completionDate < b.completionDate\n            return -1\n        else\n            return 0\n\n    _tasks.sort (a, b) ->\n        if a.order > b.order\n            return 1\n        else if a.order < b.order\n            return -1\n        else\n            return 0\n\n    _tasksByCid = {}\n    for task in _tasks\n        task.cid = _cid++\n        _tasksByCid[task.cid] = task\n\n    _archivedTasksByCid = {}\n    for task in _archivedTasks\n        task.cid = _cid++\n        _archivedTasksByCid[task.cid] = task\n\n    _getTaskLists = ->\n        if _archivedMode\n            tasksList = _archivedTasks\n            tasksListByCid = _archivedTasksByCid\n        else\n            tasksList = _tasks\n            tasksListByCid = _tasksByCid\n\n        return {tasksList, tasksListByCid}\n\n    __bindHandlers: (handle) ->\n        handle ActionTypes.CREATE_TASK, (payload) ->\n            {nextIndex, rawTask} = payload\n\n            # insert rawTask at index nextIndex\n            _tasks.splice nextIndex, 0, rawTask\n\n            # adds the task to the cid index\n            _tasksByCid[rawTask.cid] = rawTask\n\n            @emit 'change'\n\n        handle ActionTypes.REMOVE_TASK, (task) ->\n            {tasksList, tasksListByCid} = _getTaskLists()\n\n            index = tasksList.indexOf task\n            tasksList.splice index, 1\n\n            # removes task from cid index\n            delete tasksListByCid[task.cid]\n\n            @emit 'change'\n\n        handle ActionTypes.UPDATE_TASK, (payload) ->\n            {tasksList, tasksListByCid} = _getTaskLists()\n            {cid, changes} = payload\n            task = tasksListByCid[cid]\n\n            for field, value of changes\n                task[field] = value\n\n            @emit 'change'\n\n        handle ActionTypes.REORDER_TASK, (payload) ->\n            {tasksList, tasksListByCid} = _getTaskLists()\n            {changedPiece, index, oldIndex, task} = payload\n            [task1, task2] = changedPiece\n\n            index = Math.max index, 0\n\n            # No need to sort the list, just insert at the right spot\n            tasksList.splice oldIndex, 1\n            tasksList.splice index, 0, task\n\n            @emit 'change'\n\n        handle ActionTypes.SET_ARCHIVED_MODE, (isArchived) ->\n            _archivedMode = isArchived\n            @emit 'change'\n\n        handle ActionTypes.SET_SEARCH_QUERY, (searchQuery) ->\n            _searchQuery = searchQuery\n            @emit 'change'\n\n        handle ActionTypes.ARCHIVE_TASK, (cid) ->\n            task = _tasksByCid[cid]\n\n            if task?\n                # removes from list of tasks to do\n                index = _tasks.indexOf task\n                delete _tasksByCid[cid]\n                _tasks.splice index, 1\n\n                # changes boolean indicator\n                task.isArchived = true\n\n                # adds to the archived list of tasks\n                _archivedTasksByCid[cid] = task\n                index = _.sortedIndex _archivedTasks, task, (task) -> -(new Date(task.completionDate).getTime())\n                _archivedTasks.splice index, 0, task\n\n                @emit 'change'\n\n        handle ActionTypes.RESTORE_TASK, (cid) ->\n            task = _archivedTasksByCid[cid]\n\n            if task?\n                # removes from list of archived tasks\n                index = _archivedTasks.indexOf task\n                delete _archivedTasksByCid[cid]\n                _archivedTasks.splice index, 1\n\n                # changes boolean indicator\n                task.isArchived = false\n                task.done = false\n\n                # adds to the list of tasks to do\n                _tasksByCid[cid] = task\n                index = _.sortedIndex _tasks, task, (task) -> task.order\n                _tasks.splice index, 0, task\n\n                @emit 'change'\n\n        handle ActionTypes.SET_REINDEX_STATE, (isReindexing) ->\n            _isReindexing = isReindexing\n            @emit 'change'\n\n    getAll: ->\n        {tasksList} = _getTaskLists()\n        return tasksList\n\n    getUntagged: ->\n        {tasksList} = _getTaskLists()\n        return tasksList.filter (task) -> task.tags.length is 0\n\n    getByTags: (tags) ->\n\n        {tasksList} = _getTaskLists()\n\n        # returns all tasks if there is not tag filter\n        if not tags?\n            return tasksList\n\n        # returns all unselected tags if the tag filter is empty\n        else if tags.length is 0\n            return tasksList.filter (task) -> task.tags.length is 0\n\n        # filter by tag\n        else\n            mapValue = (tag) -> tag.value\n            includedTags = tags\n                .filter (tag) -> not tag.isExcluded\n                .map mapValue\n            noInclusion = includedTags.length is 0\n\n            excludedTags = tags\n                .filter (tag) -> tag.isExcluded\n                .map mapValue\n\n            # When there are no included tags, it means all tasks should\n            # be selected.\n            filteredTasksList = tasksList.filter (task) ->\n                return (TaskUtils.containsTags(task, includedTags) or noInclusion) and \\\n                       TaskUtils.doesntContainsTags(task, excludedTags)\n\n            if _searchQuery?\n                regex = new RegExp _searchQuery, 'i'\n                filteredTasksList = filteredTasksList.filter (task) ->\n                    regex.test task.description\n\n            return filteredTasksList\n\n    getNextCid: -> return _cid++\n\n    isArchivedMode: -> return _archivedMode\n\n    getNumTasks: -> return _tasks.length\n    getNumArchivedTasks: -> return _archivedTasks.length\n\n    getSearchQuery: -> return _searchQuery\n\n    isReindexing: -> return _isReindexing\n\nmodule.exports = new TaskStore()\n","# weird stuff are for accentated characters\n# see http://stackoverflow.com/questions/1073412/javascript-validation-issue-with-international-characters\nregex = /(^|\\s)#([\\w\\d\\-_\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)(?=\\s|$)/g\n\nmodule.exports.containsTags = (task, tags) ->\n    if tags.length is 0\n        return task.tags.length is 0\n    else\n        lowerCasedTags = task.tags.map (tag) -> tag.toLowerCase()\n        _.every tags, _.partial(_.contains, lowerCasedTags)\n\nmodule.exports.doesntContainsTags = (task, tags) ->\n    # no task to exclude, it cannot contain it\n    if tags.length is 0\n        return true\n    else\n        lowerCasedTags = task.tags.map (tag) -> tag.toLowerCase()\n        return not _.some tags, _.partial(_.contains, lowerCasedTags)\n\n# helper function to extract tag from description\nmodule.exports.extractTags = (desc) ->\n    tags = desc.match regex\n    tags = _.map tags, (tag) -> tag.trim().replace '#', ''\n    tags = _.uniq tags\n    return tags\n\nmodule.exports.getNewOrder = (previousTask, nextTask) ->\n    topBoundary = if nextTask? then nextTask.order else Number.MAX_VALUE\n    lowBoundary = if previousTask? then previousTask.order else 0.0\n\n    step = (topBoundary - lowBoundary) / 2\n    order = lowBoundary + step\n\n    return {order, step}\n\nmodule.exports.buildTagsList = (tags, options = {}) ->\n\n    tagPrefix = options.tagPrefix or ''\n    regularSeparator = options.regularSeparator or ' '\n    lastSeparator = options.lastSeparator or ' '\n\n    return \"\" if not tags?\n    tagsList = \"\"\n    includedTags = tags.filter (tag) -> not tag.isExcluded\n                       .map (tag) -> tag.value\n\n    includedTags.forEach (tag) ->\n        if includedTags.indexOf(tag) is 0\n            tagsList = \"#{tagPrefix}#{tag}\"\n        else if includedTags.indexOf(tag) is (includedTags.length - 1)\n            tagsList = \"#{tagsList}#{lastSeparator}#{tagPrefix}#{tag}\"\n        else\n            tagsList = \"#{tagsList}#{regularSeparator}#{tagPrefix}#{tag}\"\n    return tagsList\n","request = superagent\n\nmodule.exports =\n\n    create: (rawTask, callback) ->\n\n        request.post \"tasks\"\n        .send rawTask\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                callback \"Something went wrong -- #{res.body}\"\n\n    update: (taskID, attributes, callback) ->\n\n        request.put \"tasks/#{taskID}\"\n        .send attributes\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                callback \"Something went wrong -- #{res.body}\"\n\n    remove: (taskID, callback) ->\n\n        request.del \"tasks/#{taskID}\"\n        .set 'Accept', 'application/json'\n        .end (res) ->\n            if res.ok\n                callback null\n            else\n                callback \"Something went wrong -- #{res.body}\"\n\n    reindex: (callback) ->\n        request.post 'tasks/reindex'\n        .end (res) ->\n            if res.ok\n                callback null, res.body\n            else\n                callback \"Something went wrong -- #{res.body}\"\n\n\n"]}